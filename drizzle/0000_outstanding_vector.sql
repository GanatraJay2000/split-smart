CREATE TABLE IF NOT EXISTS "split-smart_group_members" (
	"group_id" integer,
	"user_id" integer,
	"joined_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT "split-smart_group_members_group_id_user_id_pk" PRIMARY KEY("group_id","user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "split-smart_groups" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "split-smart_groups_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "split-smart_item_shares" (
	"item_id" integer,
	"user_id" integer,
	"share_count" numeric(5, 2) NOT NULL,
	CONSTRAINT "split-smart_item_shares_item_id_user_id_pk" PRIMARY KEY("item_id","user_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "split-smart_items" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "split-smart_items_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"order_id" integer NOT NULL,
	"name" varchar(256) NOT NULL,
	"cost" numeric(10, 2) NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "split-smart_orders" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "split-smart_orders_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"group_id" integer NOT NULL,
	"created_by" integer NOT NULL,
	"date" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"platform" varchar(256),
	"total" numeric(10, 2) NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "split-smart_users" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "split-smart_users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"clerk_id" varchar(256) NOT NULL,
	"email" varchar(256) NOT NULL,
	"name" varchar(256),
	CONSTRAINT "split-smart_users_clerk_id_unique" UNIQUE("clerk_id"),
	CONSTRAINT "split-smart_users_email_unique" UNIQUE("email")
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_group_members" ADD CONSTRAINT "split-smart_group_members_group_id_split-smart_groups_id_fk" FOREIGN KEY ("group_id") REFERENCES "public"."split-smart_groups"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_group_members" ADD CONSTRAINT "split-smart_group_members_user_id_split-smart_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."split-smart_users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_item_shares" ADD CONSTRAINT "split-smart_item_shares_item_id_split-smart_items_id_fk" FOREIGN KEY ("item_id") REFERENCES "public"."split-smart_items"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_item_shares" ADD CONSTRAINT "split-smart_item_shares_user_id_split-smart_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."split-smart_users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_items" ADD CONSTRAINT "split-smart_items_order_id_split-smart_orders_id_fk" FOREIGN KEY ("order_id") REFERENCES "public"."split-smart_orders"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_orders" ADD CONSTRAINT "split-smart_orders_group_id_split-smart_groups_id_fk" FOREIGN KEY ("group_id") REFERENCES "public"."split-smart_groups"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "split-smart_orders" ADD CONSTRAINT "split-smart_orders_created_by_split-smart_users_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."split-smart_users"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
